{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Petstore server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/hr-api",
    "paths": {
        "/admin": {
            "post": {
                "description": "Create a new admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create Admin",
                "parameters": [
                    {
                        "description": "Admin details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hr.CreateHrAdminReqModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/all": {
            "get": {
                "description": "Get all admins",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get all Admins",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hr.GetAdminReqModel"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee": {
            "post": {
                "description": "Creates a new employee along with all related records (emergency contacts, bank details, salary, etc.) in a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Create Employee",
                "parameters": [
                    {
                        "description": "Employee data with all related details",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hr.EmpReqModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/accessiability": {
            "put": {
                "description": "Updates employee accessiability details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update Employee Accessiability",
                "responses": {
                    "200": {
                        "description": "Employee accessiability updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/all": {
            "post": {
                "description": "Fetch employee details with search and pagination. Main branch users can view all employees; others see only employees in their branch.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Get Employees",
                "parameters": [
                    {
                        "description": "Search criteria and pagination for employees",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hr.GetEmployeeReqModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employees fetched successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/allowances": {
            "put": {
                "description": "Updates employee allowances details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update Employee Allowances",
                "responses": {
                    "200": {
                        "description": "Employee allowances updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/bank": {
            "put": {
                "description": "Updates employee bank details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update Employee Bank Details",
                "responses": {
                    "200": {
                        "description": "Employee bank details updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/benifits": {
            "put": {
                "description": "Updates employee benifits details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update Employee Benifits",
                "responses": {
                    "200": {
                        "description": "Employee benifits updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/certificates": {
            "put": {
                "description": "Updates employee certificates details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update Employee Certificates",
                "responses": {
                    "200": {
                        "description": "Employee certificates updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/emergency": {
            "put": {
                "description": "Updates employee emergency details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update Employee Emergency Details",
                "responses": {
                    "200": {
                        "description": "Employee emergency details updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/empbank": {
            "put": {
                "description": "Updates employee bank details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "empOnlyBankDetailsUpdate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Employee bank details",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hr.CreateEmpBankDetailsReqModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee bank details updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/expatriate": {
            "put": {
                "description": "Updates employee expatriate details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update Employee Expatriate",
                "responses": {
                    "200": {
                        "description": "Employee expatriate updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/login": {
            "post": {
                "description": "Authenticates user and returns a JWT token in a cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "employee login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hr.EmpLoginReqModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/salary": {
            "put": {
                "description": "Updates employee salary details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update Employee Salary",
                "responses": {
                    "200": {
                        "description": "Employee salary updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/status": {
            "put": {
                "description": "Updates employee status details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update Employee Status",
                "responses": {
                    "200": {
                        "description": "Employee status updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/user": {
            "put": {
                "description": "Updates employee user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update Employee User",
                "responses": {
                    "200": {
                        "description": "Employee user updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "description": "Fetches details of a single employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Get One Employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee fetched successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates employee details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update Employee",
                "responses": {
                    "200": {
                        "description": "Employee updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an employee along with all related records (emergency contacts, bank details, salary, etc.) in a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Delete Employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "Authenticates user and returns a JWT token in a cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "user loginout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/payroll": {
            "get": {
                "description": "Get all payrolls",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payroll"
                ],
                "summary": "Get Payrolls",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hr.GetPayrollsReqModel"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new payroll",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payroll"
                ],
                "summary": "Create Payroll",
                "parameters": [
                    {
                        "description": "Payroll details",
                        "name": "payroll",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hr.PayrollAllowances"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payroll Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/payroll/{id}": {
            "get": {
                "description": "Get one payroll",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payroll"
                ],
                "summary": "Get Payroll",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "payroll id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hr.PayrollAllowances"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update payroll",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payroll"
                ],
                "summary": "Update Payroll",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "payroll id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payroll details",
                        "name": "payroll",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hr.CreatePayrollReqModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payroll Updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/service": {
            "post": {
                "description": "Create a new service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Create Service",
                "parameters": [
                    {
                        "description": "Service details",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hr.CreateServicesReqModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/service/{category}": {
            "get": {
                "description": "Get a service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Get Service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "service category",
                        "name": "category",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service fetched successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "description": "Get all services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "services"
                ],
                "summary": "Get Services",
                "responses": {
                    "200": {
                        "description": "Services fetched successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/testS3upload": {
            "post": {
                "description": "Uploads a file to S3 and returns the filename",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "upload-file"
                ],
                "summary": "Upload a file to S3",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "File uploaded successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/testauth": {
            "get": {
                "description": "Authenticates user and returns a JWT token in a cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Auth",
                "responses": {
                    "200": {
                        "description": "login",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/testlogin": {
            "post": {
                "description": "Authenticates user and returns a JWT token in a cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hr.TUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "hr.CreateEmpBankDetailsReqModel": {
            "type": "object",
            "properties": {
                "account_holder": {
                    "type": "string"
                },
                "account_number": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                },
                "branch_name": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "hr.CreateEmpBenifitsReqModel": {
            "type": "object",
            "properties": {
                "benifits": {
                    "type": "string"
                },
                "benifits_from": {
                    "type": "string"
                },
                "benifits_till": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "health_insurance": {
                    "type": "string"
                },
                "insurance_from": {
                    "type": "string"
                },
                "insurance_till": {
                    "type": "string"
                },
                "leave_count": {
                    "type": "integer"
                },
                "leave_status": {
                    "type": "boolean"
                },
                "leave_type": {
                    "type": "string"
                },
                "retainment_plan": {
                    "type": "string"
                },
                "retainment_plan_from": {
                    "type": "string"
                },
                "retainment_plan_till": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "hr.CreateEmpCertificatesReqModel": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "image_path": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "hr.CreateEmpEmergencyDetailsReqModel": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "relationship": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "hr.CreateEmpSalaryReqModel": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "pension_employee": {
                    "type": "string"
                },
                "pension_employer": {
                    "type": "string"
                },
                "salary_type": {
                    "type": "string"
                },
                "total_net_salary": {
                    "type": "string"
                },
                "total_of_salary_allowances": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "hr.CreateEmpStatusReqModel": {
            "type": "object",
            "properties": {
                "department": {
                    "type": "string"
                },
                "designation": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                },
                "valid_from": {
                    "type": "string"
                },
                "valid_till": {
                    "type": "string"
                }
            }
        },
        "hr.CreateEmpUserReqModel": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "employee_id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "hr.CreateEmployeeReqModel": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "current_country": {
                    "type": "string"
                },
                "dob": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "nic": {
                    "type": "string"
                },
                "nic_valid_till": {
                    "type": "string"
                },
                "passport_id": {
                    "type": "string"
                },
                "passport_valid_till": {
                    "type": "string"
                },
                "primary_number": {
                    "type": "string"
                },
                "religion": {
                    "type": "string"
                },
                "secondary_number": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "hr.CreateHrAdminReqModel": {
            "type": "object",
            "properties": {
                "branch_id": {
                    "type": "integer"
                },
                "created_by": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "hr.CreatePayrollAllowancesParams": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "payroll_id": {
                    "type": "integer"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "hr.CreatePayrollReqModel": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "employee": {
                    "type": "string"
                },
                "pension": {
                    "type": "boolean"
                },
                "pension_employee": {
                    "type": "string"
                },
                "pension_employer": {
                    "type": "string"
                },
                "salary_type": {
                    "type": "string"
                },
                "tax": {
                    "type": "boolean"
                },
                "tax_percentage": {
                    "type": "string"
                },
                "total_net_salary": {
                    "type": "string"
                },
                "total_net_salary_after_tax": {
                    "type": "string"
                },
                "total_of_salary_allowances": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "hr.CreateServicesReqModel": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "hr.EmpLoginReqModel": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "hr.EmpReqModel": {
            "type": "object"
        },
        "hr.GetAdminReqModel": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "search": {
                    "type": "string"
                }
            }
        },
        "hr.GetEmployeeReqModel": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "search": {
                    "type": "string"
                }
            }
        },
        "hr.GetPayrollsReqModel": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                }
            }
        },
        "hr.PayrollAllowances": {
            "type": "object",
            "properties": {
                "allowances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/hr.CreatePayrollAllowancesParams"
                    }
                },
                "payroll": {
                    "$ref": "#/definitions/hr.CreatePayrollReqModel"
                }
            }
        },
        "hr.TUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}